{"ast":null,"code":"// src/firebase.js\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCjpI6zS3YAWQ93mVLnnIrLF7MAUETiDZM\",\n  authDomain: \"book-exchange-platform-f3543.firebaseapp.com\",\n  projectId: \"book-exchange-platform-f3543\",\n  storageBucket: \"book-exchange-platform-f3543.appspot.com\",\n  messagingSenderId: \"272159698808\",\n  appId: \"1:272159698808:web:bf8dc1b2178608667f628d\",\n  measurementId: \"G-J7MLMY9HYS\"\n};\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app); // Ensure 'auth' is defined here\nconst db = getFirestore(app);\nconst googleProvider = new GoogleAuthProvider();\n\n// Function for signing up with email and password\nconst signupWithEmailPassword = (email, password) => {\n  return createUserWithEmailAndPassword(auth, email, password);\n};\n\n// Function for signing in with email and password\nconst loginWithEmailPassword = (email, password) => {\n  return signInWithEmailAndPassword(auth, email, password);\n};\n\n// Function for signing in with Google\nconst signInWithGoogle = () => {\n  return signInWithPopup(auth, googleProvider);\n};\n\n// Function for logging out\nconst logout = () => {\n  return signOut(auth);\n};\n\n// Export everything at the end\nexport { auth, db, googleProvider, signupWithEmailPassword, loginWithEmailPassword, signInWithGoogle, logout };","map":{"version":3,"names":["initializeApp","getAuth","GoogleAuthProvider","signInWithPopup","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","getFirestore","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","db","googleProvider","signupWithEmailPassword","email","password","loginWithEmailPassword","signInWithGoogle","logout"],"sources":["/Users/hardikkothari/Movies/book-exchange-platform/Frontend/src/firebase/firebase.js"],"sourcesContent":["// src/firebase.js\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCjpI6zS3YAWQ93mVLnnIrLF7MAUETiDZM\",\n  authDomain: \"book-exchange-platform-f3543.firebaseapp.com\",\n  projectId: \"book-exchange-platform-f3543\",\n  storageBucket: \"book-exchange-platform-f3543.appspot.com\",\n  messagingSenderId: \"272159698808\",\n  appId: \"1:272159698808:web:bf8dc1b2178608667f628d\",\n  measurementId: \"G-J7MLMY9HYS\"\n};\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app); // Ensure 'auth' is defined here\nconst db = getFirestore(app);\nconst googleProvider = new GoogleAuthProvider();\n\n// Function for signing up with email and password\nconst signupWithEmailPassword = (email, password) => {\n  return createUserWithEmailAndPassword(auth, email, password);\n};\n\n// Function for signing in with email and password\nconst loginWithEmailPassword = (email, password) => {\n  return signInWithEmailAndPassword(auth, email, password);\n};\n\n// Function for signing in with Google\nconst signInWithGoogle = () => {\n  return signInWithPopup(auth, googleProvider);\n};\n\n// Function for logging out\nconst logout = () => {\n  return signOut(auth);\n};\n\n// Export everything at the end\nexport { auth, db, googleProvider, signupWithEmailPassword, loginWithEmailPassword, signInWithGoogle, logout };\n\n\n"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,eAAe,EAAEC,8BAA8B,EAAEC,0BAA0B,EAAEC,OAAO,QAAQ,eAAe;AACjJ,SAASC,YAAY,QAAQ,oBAAoB;;AAEjD;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,8CAA8C;EAC1DC,SAAS,EAAE,8BAA8B;EACzCC,aAAa,EAAE,0CAA0C;EACzDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;AACD;AACA,MAAMC,GAAG,GAAGhB,aAAa,CAACQ,cAAc,CAAC;AACzC,MAAMS,IAAI,GAAGhB,OAAO,CAACe,GAAG,CAAC,CAAC,CAAC;AAC3B,MAAME,EAAE,GAAGX,YAAY,CAACS,GAAG,CAAC;AAC5B,MAAMG,cAAc,GAAG,IAAIjB,kBAAkB,CAAC,CAAC;;AAE/C;AACA,MAAMkB,uBAAuB,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EACnD,OAAOlB,8BAA8B,CAACa,IAAI,EAAEI,KAAK,EAAEC,QAAQ,CAAC;AAC9D,CAAC;;AAED;AACA,MAAMC,sBAAsB,GAAGA,CAACF,KAAK,EAAEC,QAAQ,KAAK;EAClD,OAAOjB,0BAA0B,CAACY,IAAI,EAAEI,KAAK,EAAEC,QAAQ,CAAC;AAC1D,CAAC;;AAED;AACA,MAAME,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,OAAOrB,eAAe,CAACc,IAAI,EAAEE,cAAc,CAAC;AAC9C,CAAC;;AAED;AACA,MAAMM,MAAM,GAAGA,CAAA,KAAM;EACnB,OAAOnB,OAAO,CAACW,IAAI,CAAC;AACtB,CAAC;;AAED;AACA,SAASA,IAAI,EAAEC,EAAE,EAAEC,cAAc,EAAEC,uBAAuB,EAAEG,sBAAsB,EAAEC,gBAAgB,EAAEC,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}