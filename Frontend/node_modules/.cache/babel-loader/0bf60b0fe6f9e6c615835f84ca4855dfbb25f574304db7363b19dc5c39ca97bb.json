{"ast":null,"code":"var _jsxFileName = \"/Users/hardikkothari/Movies/book-exchange-platform/Frontend/src/components/requestManager.jsx\",\n  _s = $RefreshSig$();\n// src/components/RequestManager.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useUserContext } from '../context/UserContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RequestManager = () => {\n  _s();\n  const {\n    user\n  } = useUserContext();\n  const userId = user ? user.uid : null;\n  const [requests, setRequests] = useState([]);\n  useEffect(() => {\n    if (userId) {\n      const fetchRequests = async () => {\n        const response = await axios.get(`http://localhost:4000/api/requests/${userId}`);\n        setRequests(response.data);\n      };\n      fetchRequests();\n    }\n  }, [userId]);\n  const handleRequest = async (bookId, ownerId) => {\n    await axios.post('http://localhost:4000/api/requests', {\n      requesterId: userId,\n      bookId,\n      ownerId\n    });\n    // Optionally, refresh requests after creating a new one\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: requests.map(request => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Request for Book ID: \", request.bookId, \" - Status: \", request.status]\n      }, request.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(RequestManager, \"XNkUsVHDUJfOU10Ewze2FvYKao8=\", false, function () {\n  return [useUserContext];\n});\n_c = RequestManager;\nexport default RequestManager;\nvar _c;\n$RefreshReg$(_c, \"RequestManager\");","map":{"version":3,"names":["React","useEffect","useState","useUserContext","axios","jsxDEV","_jsxDEV","RequestManager","_s","user","userId","uid","requests","setRequests","fetchRequests","response","get","data","handleRequest","bookId","ownerId","post","requesterId","children","fileName","_jsxFileName","lineNumber","columnNumber","map","request","status","id","_c","$RefreshReg$"],"sources":["/Users/hardikkothari/Movies/book-exchange-platform/Frontend/src/components/requestManager.jsx"],"sourcesContent":["// src/components/RequestManager.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useUserContext } from '../context/UserContext';\nimport axios from 'axios';\n\nconst RequestManager = () => {\n    const { user } = useUserContext();\n    const userId = user ? user.uid : null; \n    const [requests, setRequests] = useState([]);\n\n    useEffect(() => {\n        if (userId) {\n            const fetchRequests = async () => {\n                const response = await axios.get(`http://localhost:4000/api/requests/${userId}`);\n                setRequests(response.data);\n            };\n            fetchRequests();\n        }\n    }, [userId]);\n\n    const handleRequest = async (bookId, ownerId) => {\n        await axios.post('http://localhost:4000/api/requests', { requesterId: userId, bookId, ownerId });\n        // Optionally, refresh requests after creating a new one\n    };\n\n    return (\n        <div>\n            <h2>Your Requests</h2>\n            <ul>\n                {requests.map(request => (\n                    <li key={request.id}>\n                        Request for Book ID: {request.bookId} - Status: {request.status}\n                        {/* Add buttons to accept/decline requests */}\n                    </li>\n                ))}\n            </ul>\n            {/* Add functionality to create a request */}\n        </div>\n    );\n};\n\nexport default RequestManager;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,wBAAwB;AACvD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAK,CAAC,GAAGN,cAAc,CAAC,CAAC;EACjC,MAAMO,MAAM,GAAGD,IAAI,GAAGA,IAAI,CAACE,GAAG,GAAG,IAAI;EACrC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ,IAAIS,MAAM,EAAE;MACR,MAAMI,aAAa,GAAG,MAAAA,CAAA,KAAY;QAC9B,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,sCAAsCN,MAAM,EAAE,CAAC;QAChFG,WAAW,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC9B,CAAC;MACDH,aAAa,CAAC,CAAC;IACnB;EACJ,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,MAAMQ,aAAa,GAAG,MAAAA,CAAOC,MAAM,EAAEC,OAAO,KAAK;IAC7C,MAAMhB,KAAK,CAACiB,IAAI,CAAC,oCAAoC,EAAE;MAAEC,WAAW,EAAEZ,MAAM;MAAES,MAAM;MAAEC;IAAQ,CAAC,CAAC;IAChG;EACJ,CAAC;EAED,oBACId,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBrB,OAAA;MAAAiB,QAAA,EACKX,QAAQ,CAACgB,GAAG,CAACC,OAAO,iBACjBvB,OAAA;QAAAiB,QAAA,GAAqB,uBACI,EAACM,OAAO,CAACV,MAAM,EAAC,aAAW,EAACU,OAAO,CAACC,MAAM;MAAA,GAD1DD,OAAO,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGf,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAEd,CAAC;AAACnB,EAAA,CAlCID,cAAc;EAAA,QACCJ,cAAc;AAAA;AAAA6B,EAAA,GAD7BzB,cAAc;AAoCpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}