{"ast":null,"code":"var _jsxFileName = \"/Users/hardikkothari/Movies/book-exchange-platform/Frontend/src/pages/RecievedRequests.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport BookCardReci from '../components/BookCardReci';\nimport { useUserContext } from '../context/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReceivedRequests = () => {\n  _s();\n  const [requests, setRequests] = useState([]);\n  const {\n    user\n  } = useUserContext();\n  const userId = user.uid;\n  useEffect(() => {\n    const fetchRequests = async () => {\n      try {\n        const response = await axios.get(`http://localhost:4000/api/exchange/received/${userId}`);\n        setRequests(response.data);\n      } catch (error) {\n        console.error(\"Error fetching received requests:\", error);\n      }\n    };\n    fetchRequests();\n  }, [userId]);\n\n  // Function to handle status updates\n  const handleStatusUpdate = async (id, requestId, newStatus) => {\n    try {\n      await axios.patch(`http://localhost:4000/api/exchange/update/${userId}/${id}`, {\n        status: newStatus,\n        requestId: requestId\n      });\n      setRequests(prevRequests => prevRequests.map(req => req.id === requestId ? {\n        ...req,\n        status: newStatus\n      } : req));\n    } catch (error) {\n      console.error(\"Error updating request status:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Received Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), requests.length > 0 ? requests.map(request => /*#__PURE__*/_jsxDEV(BookCardReci, {\n      request: request,\n      onStatusChange: handleStatusUpdate\n    }, request.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No requests received.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n// const ReceivedRequests=() => {\n//     <h2 className=' text-white'>Received Requests</h2>\n// };\n_s(ReceivedRequests, \"0G0J4ONbPLoWvZlEOoWhlOxY0Y4=\", false, function () {\n  return [useUserContext];\n});\n_c = ReceivedRequests;\nexport default ReceivedRequests;\nvar _c;\n$RefreshReg$(_c, \"ReceivedRequests\");","map":{"version":3,"names":["React","useState","useEffect","axios","BookCardReci","useUserContext","jsxDEV","_jsxDEV","ReceivedRequests","_s","requests","setRequests","user","userId","uid","fetchRequests","response","get","data","error","console","handleStatusUpdate","id","requestId","newStatus","patch","status","prevRequests","map","req","children","fileName","_jsxFileName","lineNumber","columnNumber","length","request","onStatusChange","_c","$RefreshReg$"],"sources":["/Users/hardikkothari/Movies/book-exchange-platform/Frontend/src/pages/RecievedRequests.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport BookCardReci from '../components/BookCardReci';\nimport { useUserContext } from '../context/UserContext';\n\nconst ReceivedRequests = () => {\n    const [requests, setRequests] = useState([]);\n    const {user} = useUserContext();\n    const userId = user.uid; \n\n    useEffect(() => {\n        const fetchRequests = async () => {\n            try {\n                const response = await axios.get(`http://localhost:4000/api/exchange/received/${userId}`);\n                setRequests(response.data);\n            } catch (error) {\n                console.error(\"Error fetching received requests:\", error);\n            }\n        };\n        fetchRequests();\n    }, [userId]);\n\n    // Function to handle status updates\n    const handleStatusUpdate = async (id,requestId ,newStatus) => {\n        try {\n            await axios.patch(`http://localhost:4000/api/exchange/update/${userId}/${id}`, { status: newStatus ,requestId: requestId});\n            setRequests((prevRequests) => \n                prevRequests.map((req) => (req.id === requestId ? { ...req, status: newStatus } : req))\n            );\n        } catch (error) {\n            console.error(\"Error updating request status:\", error);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Received Requests</h2>\n            {requests.length > 0 ? (\n                requests.map((request) => (\n                    <BookCardReci\n                        key={request.id}\n                        request={request}\n                        onStatusChange={handleStatusUpdate}\n                    />\n                ))\n            ) : (\n                <p>No requests received.</p>\n            )}\n        </div>\n    );\n};\n\n// const ReceivedRequests=() => {\n//     <h2 className=' text-white'>Received Requests</h2>\n// };\n\nexport default ReceivedRequests;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,4BAA4B;AACrD,SAASC,cAAc,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAACW;EAAI,CAAC,GAAGP,cAAc,CAAC,CAAC;EAC/B,MAAMQ,MAAM,GAAGD,IAAI,CAACE,GAAG;EAEvBZ,SAAS,CAAC,MAAM;IACZ,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,+CAA+CJ,MAAM,EAAE,CAAC;QACzFF,WAAW,CAACK,QAAQ,CAACE,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC7D;IACJ,CAAC;IACDJ,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAACF,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAMQ,kBAAkB,GAAG,MAAAA,CAAOC,EAAE,EAACC,SAAS,EAAEC,SAAS,KAAK;IAC1D,IAAI;MACA,MAAMrB,KAAK,CAACsB,KAAK,CAAC,6CAA6CZ,MAAM,IAAIS,EAAE,EAAE,EAAE;QAAEI,MAAM,EAAEF,SAAS;QAAED,SAAS,EAAEA;MAAS,CAAC,CAAC;MAC1HZ,WAAW,CAAEgB,YAAY,IACrBA,YAAY,CAACC,GAAG,CAAEC,GAAG,IAAMA,GAAG,CAACP,EAAE,KAAKC,SAAS,GAAG;QAAE,GAAGM,GAAG;QAAEH,MAAM,EAAEF;MAAU,CAAC,GAAGK,GAAI,CAC1F,CAAC;IACL,CAAC,CAAC,OAAOV,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IAC1D;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAAuB,QAAA,gBACIvB,OAAA;MAAAuB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBxB,QAAQ,CAACyB,MAAM,GAAG,CAAC,GAChBzB,QAAQ,CAACkB,GAAG,CAAEQ,OAAO,iBACjB7B,OAAA,CAACH,YAAY;MAETgC,OAAO,EAAEA,OAAQ;MACjBC,cAAc,EAAEhB;IAAmB,GAF9Be,OAAO,CAACd,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGlB,CACJ,CAAC,gBAEF3B,OAAA;MAAAuB,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC9B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;;AAED;AACA;AACA;AAAAzB,EAAA,CAjDMD,gBAAgB;EAAA,QAEHH,cAAc;AAAA;AAAAiC,EAAA,GAF3B9B,gBAAgB;AAmDtB,eAAeA,gBAAgB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}