{"ast":null,"code":"// src/database.js\nimport { db } from './firebase'; // Adjust this path as needed\nimport { collection, doc, setDoc, getDoc, getDocs, updateDoc, deleteDoc, query, where, orderBy } from 'firebase/firestore';\n\n// Users Collection\nexport const createUserProfile = async (userId, profileData) => {\n  await setDoc(doc(db, 'users', userId), profileData);\n};\nexport const getUserProfile = async userId => {\n  const docRef = doc(db, 'users', userId);\n  const docSnap = await getDoc(docRef);\n  return docSnap.exists() ? docSnap.data() : null;\n};\n\n// Books Collection\nexport const addBook = async bookData => {\n  const booksRef = collection(db, 'books');\n  const newDocRef = await setDoc(doc(booksRef), bookData);\n  return newDocRef.id;\n};\nexport const getBooks = async () => {\n  const booksRef = collection(db, 'books');\n  const booksSnapshot = await getDocs(booksRef);\n  return booksSnapshot.docs.map(doc => ({\n    id: doc.id,\n    ...doc.data()\n  }));\n};\n\n// Requests Collection\nexport const addRequest = async requestData => {\n  const requestsRef = collection(db, 'requests');\n  await setDoc(doc(requestsRef), requestData);\n};\nexport const getRequestsByUserId = async userId => {\n  const requestsRef = collection(db, 'requests');\n  const q = query(requestsRef, where('requester', '==', userId));\n  const requestsSnapshot = await getDocs(q);\n  return requestsSnapshot.docs.map(doc => ({\n    id: doc.id,\n    ...doc.data()\n  }));\n};\n\n// Messages Collection\nexport const sendMessage = async messageData => {\n  const messagesRef = collection(db, 'messages');\n  await setDoc(doc(messagesRef), messageData);\n};\nexport const getMessages = async userId => {\n  const messagesRef = collection(db, 'messages');\n  const q = query(messagesRef, where('receiver_id', '==', userId), orderBy('timestamp'));\n  const messagesSnapshot = await getDocs(q);\n  return messagesSnapshot.docs.map(doc => ({\n    id: doc.id,\n    ...doc.data()\n  }));\n};","map":{"version":3,"names":["db","collection","doc","setDoc","getDoc","getDocs","updateDoc","deleteDoc","query","where","orderBy","createUserProfile","userId","profileData","getUserProfile","docRef","docSnap","exists","data","addBook","bookData","booksRef","newDocRef","id","getBooks","booksSnapshot","docs","map","addRequest","requestData","requestsRef","getRequestsByUserId","q","requestsSnapshot","sendMessage","messageData","messagesRef","getMessages","messagesSnapshot"],"sources":["/Users/hardikkothari/Movies/book-exchange-platform/Frontend/src/database.jsx"],"sourcesContent":["// src/database.js\nimport { db } from './firebase'; // Adjust this path as needed\nimport {\n  collection,\n  doc,\n  setDoc,\n  getDoc,\n  getDocs,\n  updateDoc,\n  deleteDoc,\n  query,\n  where,\n  orderBy\n} from 'firebase/firestore';\n\n// Users Collection\nexport const createUserProfile = async (userId, profileData) => {\n  await setDoc(doc(db, 'users', userId), profileData);\n};\n\nexport const getUserProfile = async (userId) => {\n  const docRef = doc(db, 'users', userId);\n  const docSnap = await getDoc(docRef);\n  return docSnap.exists() ? docSnap.data() : null;\n};\n\n// Books Collection\nexport const addBook = async (bookData) => {\n  const booksRef = collection(db, 'books');\n  const newDocRef = await setDoc(doc(booksRef), bookData);\n  return newDocRef.id;\n};\n\nexport const getBooks = async () => {\n  const booksRef = collection(db, 'books');\n  const booksSnapshot = await getDocs(booksRef);\n  return booksSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n};\n\n// Requests Collection\nexport const addRequest = async (requestData) => {\n  const requestsRef = collection(db, 'requests');\n  await setDoc(doc(requestsRef), requestData);\n};\n\nexport const getRequestsByUserId = async (userId) => {\n  const requestsRef = collection(db, 'requests');\n  const q = query(requestsRef, where('requester', '==', userId));\n  const requestsSnapshot = await getDocs(q);\n  return requestsSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n};\n\n// Messages Collection\nexport const sendMessage = async (messageData) => {\n  const messagesRef = collection(db, 'messages');\n  await setDoc(doc(messagesRef), messageData);\n};\n\nexport const getMessages = async (userId) => {\n  const messagesRef = collection(db, 'messages');\n  const q = query(messagesRef, where('receiver_id', '==', userId), orderBy('timestamp'));\n  const messagesSnapshot = await getDocs(q);\n  return messagesSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}